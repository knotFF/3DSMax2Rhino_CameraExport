
-- EXPORTS THE CAMERA POSITION TO RHINO
-------------------------------------------------------------------------------------------
-- UI  --
allCam = #()

rollout ExportCamera "Cameras Exporter"
(
	local buttonWidth=60
	group "Select Cameras"
	(
		Button GetCameras "Get Cameras" align:#center \
			tooltip:"Get All Cameras in File"
		listbox CamList "Cameras" enabled:false height:8
		button insCam "Insert"  enabled:false width:65 align:#left across:2 \
			tooltip:"Insert Camera"
		button remCam "Remove" enabled:false width:65 align:#right \
			tooltip:"Remove Camera"
	)
	
	group "Select Software"
	(
		Checkbox RhinoSelect "Rhino" tristate:1 across:2 align:#left\
			tooltip:"Export to Rhino"
		Checkbox MSSelect "Microstation" tristate:0  align:#right \
			tooltip:"Export to Rhino"
		button exportCameras "Export Cameras" enabled:false
	)
	group "Beta Version 0.1c"
	(
			Label label_1 "Copyright \xa9 2009"	align:#center
			Label label_2 "by Fabiano Friedrich"	align:#center
			hyperLink hl_web2 "www.tzero.org" address:"http://www.tzero.org" color:red align:#center visitedColor:red
	)
	--------------------------------------------------

	on getCameras pressed do
	(	
	allcam = #()	
	if cameras.count == 0 then 
		(
		messagebox "There are no camera's in this scene!!" beep:false
		camset = #()
		--remcam.enabled = false
		--inscam.enabled = false
		--camname.enabled = false
		do_it.enabled = false
		)
	else
		(
		camset = #()
		camlist.items =
		for i in 1 to cameras.count collect
			if classof cameras[i] == targetobject then dontcollect else 
			cameras[i].name
			camlist.enabled = true
		for i in 1 to cameras.count collect
			(
			if classof cameras[i] == targetobject then dontcollect else 
			camset[i] = cameras[i]
			--print camset[i]
			)
		for i in cameras do 
			(
				if classof i != targetobject then append allcam i
			)
		exportCameras.enabled = true
		)		
	)
	
	
	on exportCameras pressed do
	(
		if RhinoSelect.tristate == 1 then
		(
			-- gets the current file path
			myPath = maxfilepath
			
			-- creates the file
			myFileName = (maxfilepath+"cameraExportToRhino.rvb")
			outFile = createFile (myFileName)
			close outfile
			
			for i in 1 to allCam.count do
			(
				the1 = allcam[i]
				theLens = (cameraFOV.FOVtoMM the1.fov)
				
				if the1.type != #target do the1.type = #target
				
				file_write = openFile (myFileName) mode:"a+"
				
				format "\n\n '---%---" the1.name to:file_write
				format "Option Explicit\n" to:file_write
				format "'Script autogenerated by MaxScript file written by Fabiano Friedrich \n" to:file_write
				format "'On % \n" LocalTime to:file_write
				
				format "\n Call Main_%()" the1.name to:file_write
				format "\n\n Sub Main_%()" the1.name to:file_write
				
				format "\n\t Dim strView_%, arrCamera_%, arrTarget_%, strName_%" the1.name the1.name the1.name the1.name to:file_write
				format "\n\t strName_% = \"%\"" the1.name the1.name to:file_write
				format "\n\t strView_% = Rhino.CurrentView" the1.name to:file_write
				format "\n\t Rhino.ViewProjection strView_%, 2" the1.name to:file_write
				format "\n\t arrCamera_% = array(%,%,%)" the1.name the1.pos.X the1.pos.Y the1.pos.Z to:file_write
				format "\n\t arrTarget_% = array(%,%,%)" the1.name the1.target.pos.X the1.target.pos.Y the1.target.pos.Z to:file_write

				format "\n\t if IsArray(arrCamera_%) And IsArray(arrTarget_%) Then" the1.name the1.name to:file_write
				format "\n\t\t Rhino.ViewCameraTarget strView_%, arrCamera_%, arrTarget_%" the1.name the1.name the1.name to:file_write
				format "\n\t\t Call Rhino.ViewCameraLens (strView_%, %)" the1.name theLens to:file_write
				format "\n\t\t Rhino.AddNamedView strName_%" the1.name to:file_write
				format "\n\t End If" to:file_write

				format "\n End Sub" to:file_write
							
				close file_write
			)
			close outFile
		) -- END IF
		
		if MSSelect.tristate == 1 then
		(
			-- gets the current file path
			myPath = maxfilepath
			
			-- creates the file
			myFileName = (maxfilepath+"cameraExportToMicrostation.txt")
			outFile = createFile (myFileName)
			close outfile
			
			(
			file_write = openFile (myFileName) mode:"a+"
			
			format "\n\n\n Sub CameraAndSavedView(view As Integer, name As String, vw As view, camX As Double, camY As Double, camZ As Double, tarX As Double, tarY As Double, tarZ As Double, lens As Double)" to:file_write
			format "\n\t Dim vc As New ViewCameraParameters"
			format "\n\t Dim camPt_Camera01 As Point3d, targetPt_Camera01 As Point3d"
			
			format "\n\t 'Set cam position" to:file_write
			format "\n\t camPt.X = camX" to:file_write
			format "\n\t camPt.Y = camY" to:file_write
			format "\n\t camPt.Z = camZ" to:file_write
		 
			format "\n\n\t 'Set target position" to:file_write
			format "\n\t targetPt.X = tarX " to:file_write
			format "\n\t targetPt.Y = tarY " to:file_write
			format "\n\t targetPt.Z = tarZ " to:file_write

			format "\n\n\t 'Set clipping distances" to:file_write
			format "\n\t vc.CameraBackClippingDistance = 1000000" to:file_write
			format "\n\t vc.CameraFrontClippingDistance = 1000000" to:file_write

			format "\n\n\t 'Define" to:file_write
			format "\n\t vc.CameraAngle = lens" to:file_write
			format "\n\t vc.CameraPosition = camPt_Camera01" to:file_write
			format "\n\t vc.CameraTarget = targetPt_Camera01" to:file_write
			format "\n\t 'vc.CameraUpVector = vw.CameraUpVector" to:file_write

			format "\n\n\t 'Apply at selected view" to:file_write
			format "\n\t vw.SetCameraProperties vc" to:file_write
			format "\n\t vw.Redraw" to:file_write

			format "\n\n\t Dim ele As SavedViewElement" to:file_write
			format "\n\t Set ele = CreateSavedViewElement(view, name)" to:file_write
			format "\n\t Call ActiveModelReference.AddElement(ele)" to:file_write

			format "\n\n End Sub" to:file_write
			
			close file_write
			)
			
			(
				file_write = openFile (myFileName) mode:"a+"
				format "\n\n\n Sub Main()" to:file_write
			)	
			
			for i in 1 to allCam.count do
			(
				the1 = allcam[i]
				theLens = (cameraFOV.FOVtoMM the1.fov)
			
				file_write = openFile (myFileName) mode:"a+"
				
				format "\n\t Call CameraAndSavedView(8, \"%\", ActiveDesignFile.Views(4), %, %, %, %, %, %, %)" \
							the1.name the1.pos.x the1.pos.Y the1.pos.Z \
							the1.target.pos.X the1.target.pos.Y the1.target.pos.Z theLens to:file_write				
				close file_write
			)
			
			(
				file_write = openFile (myFileName) mode:"a+"
				format "\n\n End Sub" to:file_write
			)	
			
			/*
			for i in 1 to allCam.count do
			(
				the1 = allcam[i]
				theLens = (cameraFOV.FOVtoMM the1.fov)
				
				file_write = openFile (myFileName) mode:"a+"
				
				--format "\n\n\n '---%---" the1.name to:file_write
				--format "Option Explicit\n" to:file_write
				--format "'Script autogenerated by MaxScript file written by Fabiano Friedrich \n" to:file_write
				--format "'On % \n" LocalTime to:file_write

				format "\n\n Sub Main_%()" the1.name to:file_write

				format "\n\t Dim vc_% As New ViewCameraParameters" the1.name to:file_write
				format "\n\t Dim camPt_% As Point3d, targetPt_% As Point3d" the1.name the1.name to:file_write
				format "\n\n\t 'Set cam position" to:file_write
				format "\n\t camPt_%.X = %" the1.name the1.pos.X to:file_write
				format "\n\t camPt_%.Y = %" the1.name the1.pos.Y to:file_write
				format "\n\t camPt_%.Z = %" the1.name the1.pos.Z to:file_write
				
				format "\n\n\t 'Set target position" to:file_write
				format "\n\t targetPt_%.X = %" the1.name the1.target.pos.X to:file_write
				format "\n\t targetPt_%.Y = %" the1.name the1.target.pos.Y to:file_write
				format "\n\t targetPt_%.Z = %" the1.name the1.target.pos.Z to:file_write
				
				format "\n\n\t 'Set clipping distances" to:file_write				
				format "\n\t vc_%.CameraBackClippingDistance = 1000000" the1.name to:file_write
				format "\n\t vc_%.CameraFrontClippingDistance = 1000000" the1.name to:file_write
				
				format "\n\n\t 'Define" to:file_write
				format "\n\t vc_%.CameraAngle = %" the1.name theLens to:file_write
				format "\n\t vc_%.CameraPosition = camPt_%" the1.name the1.name to:file_write
				format "\n\t vc_%.CameraTarget = targetPt_%" the1.name the1.name to:file_write
				format "\n\t 'vc_%.CameraUpVector = vw.CameraUpVector" the1.name to:file_write

				format "\n\n\t 'Apply at selected view" to:file_write				
				format "\n\t ActiveDesignFile.Views(4).SetCameraProperties vc_%" the1.name to:file_write
				format "\n\t ActiveDesignFile.Views(4).Redraw" to:file_write

				format "\n End Sub" to:file_write
				
				format "\n\n\n Call Main()" to:file_write	
				
				close file_write
			)
			for i in 1 to allCam.count do
			(
				the1 = allcam[i]
				file_write = openFile (myFileName) mode:"a+"
					
				format "\n\t Call Main_%()" the1.name to:file_write
				
				close file_write
			)
			(
				file_write = openFile (myFileName) mode:"a+"
				
				format "\n End Sub" to:file_write
				
				close file_write
			)
			*/
			
			close outFile
			
		) -- END IF
	)

-------------------------------------------------------------------------------------------	
) -- END UI
createDialog ExportCamera width:195
